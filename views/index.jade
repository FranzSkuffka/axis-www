extends layout

block content
  .instruction
    h1#installation Installation
    p Here are some instructions on how to install axis. Wow.

  .instruction
    h1#usage Usage
    p This is how to use axis

  .intro
    h1#buttons Buttons
    p Axis' buttons are extremely flexible to be able to fit any situation. They come in two flavors, the basic default button and the glossy button.

  each mxin, i in site.modules.buttons
    +doc(mxin, site.modules.buttons.length, i)

  .intro
    h1#code_blocks Code Blocks
    p A small collection of simple and polished styles for code blocks.

  each mxin, i in site.modules.code_blocks
    +doc(mxin, site.modules.code_blocks.length, i)

  .intro
    h1#forms Forms
    p Forms are a huge pain. This light set of mixins attempt to eliminate some of the pain without forcing your hand in regards to markup structure.

  each mxin, i in site.modules.forms
    +doc(mxin, site.modules.forms.length, i)

  .intro
    h1#gradients Gradients
    :markdown
      While [nib's gradient helper](http://visionmedia.github.io/nib/) takes care of most situations and is automatically included, axis provides a couple of convenience methods for easily creating gradients.

  each mxin, i in site.modules.gradients
    +doc(mxin, site.modules.gradients.length, i)

  .intro
    h1#interaction Interaction
    p Stylus is unique among css preprocessors for it's ability to access values from parent elements. This makes interaction-based mixins like these not only possible, but much more clean and DRY.

  each mxin, i in site.modules.interaction
    +doc(mxin, site.modules.interaction.length, i)

  .intro
    h1#tables Tables
    p Right now, the "tables" section consists of just one mixin, for prettifying tables. But who knows, it might expand in the future if people love tables enough!

  each mxin, i in site.modules.tables
    +doc(mxin, site.modules.tables.length, i)

  .intro
    h1#typography Typography
    p A set of helpers and beautiful defaults for all aspects of typography.

  each mxin, i in site.modules.typography
    +doc(mxin, site.modules.typography.length, i)

  .intro
    h1#ui UI
    p A set of flexible shortcuts for creating common UI elements.

  each mxin, i in site.modules.ui
    +doc(mxin, site.modules.ui.length, i)

//- This mixin renders the documentation block for each object
mixin doc(fn, i, length)
  section

    h3(id=fn.name)= fn.name + "(" + (fn.params ? Object.keys(fn.params) : '') + ")"
    p= fn.description

    if fn.params
      h4 Parameters
      dl
        each v, k in fn.params
          dt= k
          dd= v

    h4 Examples

    each example in fn.examples
      .example
        pre= example.code
        .el!= example.el

  if i != length + 1
    hr